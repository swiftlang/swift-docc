#!/bin/bash
#
# This source file is part of the Swift.org open source project
#
# Copyright (c) 2021-2025 Apple Inc. and the Swift project authors
# Licensed under Apache License v2.0 with Runtime Library Exception
#
# See https://swift.org/LICENSE.txt for license information
# See https://swift.org/CONTRIBUTORS.txt for Swift project authors
#

# This is a test external resolver that always returns the same resolved information for every request.
# It can be used in local development to test how Swift-DocC interacts with information from an external source.
#
# To set this up, set the `DOCC_LINK_RESOLVER_EXECUTABLE` environmental variable to the path of this script.
#
# Swift-DocC will call this executable for unresolved symbol references in the processed symbol graph files and for
# absolute documentation links with the "com.test.bundle" identifier. For example: <doc://com.test.bundle/something>

RESPONSE='{
  "resolved" : {
    "abstract" : [
      {
        "text" : "Resolved ",
        "type" : "text"
      },
      {
        "inlineContent" : [
          {
            "text" : "formatted",
            "type" : "text"
          }
        ],
        "type" : "strong"
      },
      {
        "text" : " abstract with ",
        "type" : "text"
      },
      {
        "identifier" : "doc://com.test.bundle/path/to/other-page",
        "isActive" : true,
        "type" : "reference"
      },
      {
        "text" : ".",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift",
      "data",
      {
        "id" : "language-id",
        "idAliases" : [
          "language-alias-id"
        ],
        "linkDisambiguationID" : "language-id",
        "name" : "Language name"
      },
      {
        "id" : "language-id-2",
        "linkDisambiguationID" : "language-id-2",
        "name" : "Other language name"
      },
      "occ"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "resolved"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "fragment"
      }
    ],
    "kind" : {
      "id" : "kind-id",
      "isSymbol" : true,
      "name" : "Kind name"
    },
    "language" : {
      "id" : "language-id",
      "idAliases" : [
        "language-alias-id"
      ],
      "linkDisambiguationID" : "language-id",
      "name" : "Language name"
    },
    "path" : "/documentation/something",
    "platforms" : [
      {
        "beta" : false,
        "introducedAt" : "1.2.3",
        "name" : "Platform name"
      }
    ],
    "referenceURL" : "doc://com.test.bundle/documentation/something",
    "references" : [
      {
        "abstract" : [
          {
            "text" : "The abstract of another page that is linked to",
            "type" : "text"
          }
        ],
        "identifier" : "doc://com.test.bundle/path/to/other-page",
        "kind" : "article",
        "title" : "Linked from abstract",
        "type" : "topic",
        "url" : "/path/to/other-page"
      },
      {
        "alt" : "Resolved image alt text",
        "identifier" : "some-external-card-image-identifier",
        "type" : "image",
        "variants" : [
          {
            "traits" : [
              "1x"
            ],
            "url" : "http://example.com/some-image.jpg"
          },
          {
            "traits" : [
              "2x",
              "dark"
            ],
            "url" : "http://example.com/some-image@2x~dark.jpg"
          }
        ]
      }
    ],
    "title" : "Resolved title",
    "topicImages" : [
      {
        "identifier" : "some-external-card-image-identifier",
        "type" : "card"
      }
    ],
    "usr" : "resolved-unique-symbol-id",
    "variants" : [
      {
        "abstract" : [
          {
            "text" : "Resolved  abstract",
            "type" : "text"
          },
          {
            "code" : "variant",
            "type" : "codeVoice"
          },
          {
            "text" : "Resolved  abstract",
            "type" : "text"
          }
        ],
        "fragments" : [
          {
            "kind" : "keyword",
            "text" : "resolved"
          },
          {
            "kind" : "text",
            "text" : " "
          },
          {
            "kind" : "identifier",
            "text" : "variant"
          },
          {
            "kind" : "text",
            "text" : ": "
          },
          {
            "kind" : "typeIdentifier",
            "text" : "fragment"
          }
        ],
        "kind" : {
          "id" : "variant-kind-id",
          "isSymbol" : true,
          "name" : "Variant kind name"
        },
        "language" : "occ",
        "title" : "Resolved variant title",
        "traits" : [
          {
            "interfaceLanguage" : "occ"
          }
        ]
      }
    ]
  }
}'

# Write this resolver's identifier and capabilities
echo '{
  "identifier": "com.test.bundle", 
  "capabilities": 0
}'

# Forever, wait for DocC to send a request and respond the resolved information
while true
do
    # Wait for a request
    read
    
    # Respond the resolved information
    echo -e $RESPONSE
done
