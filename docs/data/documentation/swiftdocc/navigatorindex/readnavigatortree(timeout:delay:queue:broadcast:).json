{
  "abstract" : [
    {
      "text" : "Read a tree on disk from a given path.",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "The read is atomically performed, which means it reads all the content of the file from the disk and process the tree from loaded data.",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "The queue is used to load the data for a given timeout period, after that, the queue is used to schedule another read after a given delay.",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "This approach ensures that the used  queue doesnâ€™t stall while loading the content from the disk keeping the used queue responsive.",
      "type" : "text"
    }
  ],
  "hierarchy" : {
    "paths" : [
      [
        "doc:\/\/SwiftDocC\/documentation\/SwiftDocC",
        "doc:\/\/SwiftDocC\/documentation\/SwiftDocC\/DocumentationIndexing",
        "doc:\/\/SwiftDocC\/documentation\/SwiftDocC\/NavigatorIndex"
      ]
    ]
  },
  "identifier" : {
    "interfaceLanguage" : "swift",
    "url" : "doc:\/\/SwiftDocC\/documentation\/SwiftDocC\/NavigatorIndex\/readNavigatorTree(timeout:delay:queue:broadcast:)"
  },
  "kind" : "symbol",
  "metadata" : {
    "externalID" : "s:9SwiftDocC14NavigatorIndexC04readC4Tree7timeout5delay5queue9broadcastySd_SdSo012OS_dispatch_I0CySayAA0cF0C4NodeCG_SbAL5ErrorOSgtcSgtKF",
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "func"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "readNavigatorTree"
      },
      {
        "kind" : "text",
        "text" : "("
      },
      {
        "kind" : "externalParam",
        "text" : "timeout"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "c:@T@NSTimeInterval",
        "text" : "TimeInterval"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "externalParam",
        "text" : "delay"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "c:@T@NSTimeInterval",
        "text" : "TimeInterval"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "externalParam",
        "text" : "queue"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "c:objc(cs)OS_dispatch_queue",
        "text" : "DispatchQueue"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "externalParam",
        "text" : "broadcast"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:9SwiftDocC13NavigatorTreeC",
        "text" : "NavigatorTree"
      },
      {
        "kind" : "text",
        "text" : "."
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:9SwiftDocC13NavigatorTreeC17BroadcastCallbacka",
        "text" : "BroadcastCallback"
      },
      {
        "kind" : "text",
        "text" : "?) "
      },
      {
        "kind" : "keyword",
        "text" : "throws"
      }
    ],
    "modules" : [
      {
        "name" : "SwiftDocC"
      }
    ],
    "remoteSource" : {
      "fileName" : "NavigatorIndex.swift",
      "url" : "https:\/\/github.com\/swiftlang\/swift-docc\/blob\/main\/Sources\/SwiftDocC\/Indexing\/Navigator\/NavigatorIndex.swift#L390"
    },
    "role" : "symbol",
    "roleHeading" : "Instance Method",
    "symbolKind" : "method",
    "title" : "readNavigatorTree(timeout:delay:queue:broadcast:)"
  },
  "primaryContentSections" : [
    {
      "declarations" : [
        {
          "languages" : [
            "swift"
          ],
          "platforms" : [
            "macOS"
          ],
          "tokens" : [
            {
              "kind" : "keyword",
              "text" : "func"
            },
            {
              "kind" : "text",
              "text" : " "
            },
            {
              "kind" : "identifier",
              "text" : "readNavigatorTree"
            },
            {
              "kind" : "text",
              "text" : "("
            },
            {
              "kind" : "externalParam",
              "text" : "timeout"
            },
            {
              "kind" : "text",
              "text" : ": "
            },
            {
              "kind" : "typeIdentifier",
              "preciseIdentifier" : "c:@T@NSTimeInterval",
              "text" : "TimeInterval"
            },
            {
              "kind" : "text",
              "text" : ", "
            },
            {
              "kind" : "externalParam",
              "text" : "delay"
            },
            {
              "kind" : "text",
              "text" : ": "
            },
            {
              "kind" : "typeIdentifier",
              "preciseIdentifier" : "c:@T@NSTimeInterval",
              "text" : "TimeInterval"
            },
            {
              "kind" : "text",
              "text" : " = 0.01, "
            },
            {
              "kind" : "externalParam",
              "text" : "queue"
            },
            {
              "kind" : "text",
              "text" : ": "
            },
            {
              "kind" : "typeIdentifier",
              "preciseIdentifier" : "c:objc(cs)OS_dispatch_queue",
              "text" : "DispatchQueue"
            },
            {
              "kind" : "text",
              "text" : ", "
            },
            {
              "kind" : "externalParam",
              "text" : "broadcast"
            },
            {
              "kind" : "text",
              "text" : ": "
            },
            {
              "identifier" : "doc:\/\/SwiftDocC\/documentation\/SwiftDocC\/NavigatorTree",
              "kind" : "typeIdentifier",
              "preciseIdentifier" : "s:9SwiftDocC13NavigatorTreeC",
              "text" : "NavigatorTree"
            },
            {
              "kind" : "text",
              "text" : "."
            },
            {
              "identifier" : "doc:\/\/SwiftDocC\/documentation\/SwiftDocC\/NavigatorTree\/BroadcastCallback",
              "kind" : "typeIdentifier",
              "preciseIdentifier" : "s:9SwiftDocC13NavigatorTreeC17BroadcastCallbacka",
              "text" : "BroadcastCallback"
            },
            {
              "kind" : "text",
              "text" : "?) "
            },
            {
              "kind" : "keyword",
              "text" : "throws"
            }
          ]
        }
      ],
      "kind" : "declarations"
    },
    {
      "kind" : "parameters",
      "parameters" : [
        {
          "content" : [
            {
              "inlineContent" : [
                {
                  "text" : "The amount of time we can load a batch of items from data, once the timeout time pass,",
                  "type" : "text"
                },
                {
                  "text" : " ",
                  "type" : "text"
                },
                {
                  "text" : "the reading process will reschedule asynchronously using the given queue.",
                  "type" : "text"
                }
              ],
              "type" : "paragraph"
            }
          ],
          "name" : "timeout"
        },
        {
          "content" : [
            {
              "inlineContent" : [
                {
                  "text" : "The delay to wait before schedule the next read. Default: 0.01 seconds.",
                  "type" : "text"
                }
              ],
              "type" : "paragraph"
            }
          ],
          "name" : "delay"
        },
        {
          "content" : [
            {
              "inlineContent" : [
                {
                  "text" : "The queue to use.",
                  "type" : "text"
                }
              ],
              "type" : "paragraph"
            }
          ],
          "name" : "queue"
        },
        {
          "content" : [
            {
              "inlineContent" : [
                {
                  "text" : "The callback to update get updates of the current process.",
                  "type" : "text"
                }
              ],
              "type" : "paragraph"
            }
          ],
          "name" : "broadcast"
        }
      ]
    },
    {
      "content" : [
        {
          "anchor" : "discussion",
          "level" : 2,
          "text" : "Discussion",
          "type" : "heading"
        },
        {
          "content" : [
            {
              "inlineContent" : [
                {
                  "text" : "Do not access the navigator tree root node or the map from identifier to node from a different thread than the one the queue is using while the read is performed,",
                  "type" : "text"
                },
                {
                  "text" : " ",
                  "type" : "text"
                },
                {
                  "text" : "this may cause data inconsistencies. For that please use the broadcast callback that notifies which items have been loaded.",
                  "type" : "text"
                }
              ],
              "type" : "paragraph"
            }
          ],
          "name" : "Note",
          "style" : "note",
          "type" : "aside"
        }
      ],
      "kind" : "content"
    }
  ],
  "schemaVersion" : {
    "major" : 0,
    "minor" : 3,
    "patch" : 0
  },
  "sections" : [

  ],
  "variants" : [
    {
      "paths" : [
        "\/documentation\/swiftdocc\/navigatorindex\/readnavigatortree(timeout:delay:queue:broadcast:)"
      ],
      "traits" : [
        {
          "interfaceLanguage" : "swift"
        }
      ]
    }
  ]
, 
"references": {
"doc://SwiftDocC/documentation/SwiftDocC": {
  "abstract" : [
    {
      "text" : "Combine code comments with markup prose to produce structured, semantic documentation.",
      "type" : "text"
    }
  ],
  "identifier" : "doc:\/\/SwiftDocC\/documentation\/SwiftDocC",
  "kind" : "symbol",
  "role" : "collection",
  "title" : "SwiftDocC",
  "type" : "topic",
  "url" : "\/documentation\/swiftdocc"
},
"doc://SwiftDocC/documentation/SwiftDocC/DocumentationIndexing": {
  "abstract" : [
    {
      "text" : "Create documentation indexes optimized for text search or navigation.",
      "type" : "text"
    }
  ],
  "identifier" : "doc:\/\/SwiftDocC\/documentation\/SwiftDocC\/DocumentationIndexing",
  "kind" : "article",
  "role" : "collectionGroup",
  "title" : "Documentation Indexing",
  "type" : "topic",
  "url" : "\/documentation\/swiftdocc\/documentationindexing"
},
"doc://SwiftDocC/documentation/SwiftDocC/NavigatorIndex": {
  "abstract" : [
    {
      "text" : "A ",
      "type" : "text"
    },
    {
      "code" : "NavigatorIndex",
      "type" : "codeVoice"
    },
    {
      "text" : " contains all the necessary information to display the data inside a navigator.",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "The data ranges from the tree to the necessary pieces of information to filter the content and perform actions in a fast way.",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "A navigator index is created per bundle and needs a bundle identifier to correctly work. Anonymous bundles are allowed, but they limit",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "the functionalities of the index.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "class"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "NavigatorIndex"
    }
  ],
  "identifier" : "doc:\/\/SwiftDocC\/documentation\/SwiftDocC\/NavigatorIndex",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "NavigatorIndex"
    }
  ],
  "role" : "symbol",
  "title" : "NavigatorIndex",
  "type" : "topic",
  "url" : "\/documentation\/swiftdocc\/navigatorindex"
},
"doc://SwiftDocC/documentation/SwiftDocC/NavigatorIndex/readNavigatorTree(timeout:delay:queue:broadcast:)": {
  "abstract" : [
    {
      "text" : "Read a tree on disk from a given path.",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "The read is atomically performed, which means it reads all the content of the file from the disk and process the tree from loaded data.",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "The queue is used to load the data for a given timeout period, after that, the queue is used to schedule another read after a given delay.",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "This approach ensures that the used  queue doesnâ€™t stall while loading the content from the disk keeping the used queue responsive.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "readNavigatorTree"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "timeout"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "c:@T@NSTimeInterval",
      "text" : "TimeInterval"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "delay"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "c:@T@NSTimeInterval",
      "text" : "TimeInterval"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "queue"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "c:objc(cs)OS_dispatch_queue",
      "text" : "DispatchQueue"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "broadcast"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:9SwiftDocC13NavigatorTreeC",
      "text" : "NavigatorTree"
    },
    {
      "kind" : "text",
      "text" : "."
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:9SwiftDocC13NavigatorTreeC17BroadcastCallbacka",
      "text" : "BroadcastCallback"
    },
    {
      "kind" : "text",
      "text" : "?) "
    },
    {
      "kind" : "keyword",
      "text" : "throws"
    }
  ],
  "identifier" : "doc:\/\/SwiftDocC\/documentation\/SwiftDocC\/NavigatorIndex\/readNavigatorTree(timeout:delay:queue:broadcast:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "readNavigatorTree(timeout:delay:queue:broadcast:)",
  "type" : "topic",
  "url" : "\/documentation\/swiftdocc\/navigatorindex\/readnavigatortree(timeout:delay:queue:broadcast:)"
},
"doc://SwiftDocC/documentation/SwiftDocC/NavigatorTree": {
  "abstract" : [
    {
      "text" : "A ",
      "type" : "text"
    },
    {
      "code" : "NavigatorTree",
      "type" : "codeVoice"
    },
    {
      "text" : " is a class holding information about a tree of data that can be navigated using a tree navigator.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "class"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "NavigatorTree"
    }
  ],
  "identifier" : "doc:\/\/SwiftDocC\/documentation\/SwiftDocC\/NavigatorTree",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "NavigatorTree"
    }
  ],
  "role" : "symbol",
  "title" : "NavigatorTree",
  "type" : "topic",
  "url" : "\/documentation\/swiftdocc\/navigatortree"
},
"doc://SwiftDocC/documentation/SwiftDocC/NavigatorTree/BroadcastCallback": {
  "abstract" : [
    {
      "text" : "The broadcast callback notifies a listener about the latest items loaded from the disk.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "typealias"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "BroadcastCallback"
    }
  ],
  "identifier" : "doc:\/\/SwiftDocC\/documentation\/SwiftDocC\/NavigatorTree\/BroadcastCallback",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "BroadcastCallback"
    }
  ],
  "role" : "symbol",
  "title" : "NavigatorTree.BroadcastCallback",
  "type" : "topic",
  "url" : "\/documentation\/swiftdocc\/navigatortree\/broadcastcallback"
}
}
}