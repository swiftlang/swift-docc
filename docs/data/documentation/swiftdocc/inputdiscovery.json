{
  "abstract" : [
    {
      "text" : "Learn how to discover documentation inputs on the file system.",
      "type" : "text"
    }
  ],
  "hierarchy" : {
    "paths" : [
      [
        "doc:\/\/SwiftDocC\/documentation\/SwiftDocC"
      ]
    ]
  },
  "identifier" : {
    "interfaceLanguage" : "swift",
    "url" : "doc:\/\/SwiftDocC\/documentation\/SwiftDocC\/InputDiscovery"
  },
  "kind" : "article",
  "metadata" : {
    "modules" : [
      {
        "name" : "SwiftDocC"
      }
    ],
    "role" : "collectionGroup",
    "roleHeading" : "API Collection",
    "title" : "Input Discovery"
  },
  "primaryContentSections" : [
    {
      "content" : [
        {
          "anchor" : "Discussion",
          "level" : 2,
          "text" : "Discussion",
          "type" : "heading"
        },
        {
          "inlineContent" : [
            {
              "text" : "A ",
              "type" : "text"
            },
            {
              "code" : "DocumentationContext\/InputsProvider",
              "type" : "codeVoice"
            },
            {
              "text" : " discovers documentation catalogs on the file system and creates a ",
              "type" : "text"
            },
            {
              "identifier" : "doc:\/\/SwiftDocC\/documentation\/SwiftDocC\/DocumentationBundle",
              "isActive" : true,
              "type" : "reference"
            },
            {
              "text" : " from the discovered catalog content.",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "code" : [
            "let inputProvider = DocumentationContext.InputsProvider(fileManager: fileSystem)",
            "",
            "guard let catalogURL = try inputProvider.findCatalog(startingPoint: startingPoint) else {",
            "    return",
            "}",
            "let bundle = try inputProvider.makeInputs(contentOf: catalogURL, options: BundleDiscoveryOptions())",
            "",
            "print(\"A bundle with ID: \\(bundle.identifier)\")"
          ],
          "syntax" : "swift",
          "type" : "codeListing"
        },
        {
          "inlineContent" : [
            {
              "text" : "You can also create documentation inputs, without a documentation catalog, from a list of symbol graph files:",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "code" : [
            "let inputProvider = DocumentationContext.InputsProvider(fileManager: fileSystem)",
            "",
            "guard let (bundle, dataProvider) = try inputProvider.makeInputsFromSymbolGraphs(",
            "    options: BundleDiscoveryOptions(",
            "        additionalSymbolGraphFiles: listOfSymbolGraphLocations",
            "    )",
            ") else {",
            "    return",
            "}",
            "",
            "print(\"A bundle with ID: \\(bundle.identifier)\")"
          ],
          "syntax" : "swift",
          "type" : "codeListing"
        },
        {
          "content" : [
            {
              "inlineContent" : [
                {
                  "text" : "Use the returned ",
                  "type" : "text"
                },
                {
                  "code" : "dataProvider",
                  "type" : "codeVoice"
                },
                {
                  "text" : " to create a ",
                  "type" : "text"
                },
                {
                  "identifier" : "doc:\/\/SwiftDocC\/documentation\/SwiftDocC\/DocumentationContext",
                  "isActive" : true,
                  "type" : "reference"
                },
                {
                  "text" : " from this ",
                  "type" : "text"
                },
                {
                  "identifier" : "doc:\/\/SwiftDocC\/documentation\/SwiftDocC\/DocumentationBundle",
                  "isActive" : true,
                  "type" : "reference"
                },
                {
                  "text" : ".",
                  "type" : "text"
                }
              ],
              "type" : "paragraph"
            }
          ],
          "name" : "Note",
          "style" : "note",
          "type" : "aside"
        },
        {
          "inlineContent" : [
            {
              "text" : "It’s common to want combine these two strategies and require that they discover a ",
              "type" : "text"
            },
            {
              "identifier" : "doc:\/\/SwiftDocC\/documentation\/SwiftDocC\/DocumentationBundle",
              "isActive" : true,
              "type" : "reference"
            },
            {
              "text" : ".",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "For this use-case, use the",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "code" : "DocumentationContext\/InputsProvider\/inputsAndDataProvider(startingPoint:allowArbitraryCatalogDirectories:options:)",
              "type" : "codeVoice"
            },
            {
              "text" : " method:",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "code" : [
            "let inputProvider = DocumentationContext.InputsProvider(fileManager: fileSystem)",
            "",
            "let (bundle, dataProvider) = try inputProvider.inputsAndDataProvider(",
            "    startingPoint: maybeStartingPoint,",
            "    options: BundleDiscoveryOptions(",
            "        additionalSymbolGraphFiles: listOfSymbolGraphLocations",
            "    )",
            ")",
            "",
            "print(\"A bundle with ID: \\(bundle.identifier)\")"
          ],
          "syntax" : "swift",
          "type" : "codeListing"
        },
        {
          "anchor" : "Bundle-Contents",
          "level" : 3,
          "text" : "Bundle Contents",
          "type" : "heading"
        },
        {
          "inlineContent" : [
            {
              "text" : "A ",
              "type" : "text"
            },
            {
              "identifier" : "doc:\/\/SwiftDocC\/documentation\/SwiftDocC\/DocumentationBundle",
              "isActive" : true,
              "type" : "reference"
            },
            {
              "text" : " represents the list of “discovered” input files–categorized by their kind–to use as documentation inputs.",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "inlineContent" : [
            {
              "text" : "Use a ",
              "type" : "text"
            },
            {
              "code" : "DataProvider",
              "type" : "codeVoice"
            },
            {
              "text" : " that the ",
              "type" : "text"
            },
            {
              "code" : "DocumentationContext\/InputsProvider",
              "type" : "codeVoice"
            },
            {
              "text" : " returned alongside the bundle to read the files in the bundle.",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        }
      ],
      "kind" : "content"
    }
  ],
  "schemaVersion" : {
    "major" : 0,
    "minor" : 3,
    "patch" : 0
  },
  "sections" : [

  ],
  "seeAlsoSections" : [
    {
      "anchor" : "Content-Discovery",
      "generated" : true,
      "identifiers" : [
        "doc:\/\/SwiftDocC\/documentation\/SwiftDocC\/DocumentationContextGroup"
      ],
      "title" : "Content Discovery"
    }
  ],
  "topicSections" : [
    {
      "anchor" : "Documentation-Bundle",
      "identifiers" : [
        "doc:\/\/SwiftDocC\/documentation\/SwiftDocC\/DocumentationBundle",
        "doc:\/\/SwiftDocC\/documentation\/SwiftDocC\/BundleIdentifier",
        "doc:\/\/SwiftDocC\/documentation\/SwiftDocC\/DocumentationBundleFileTypes"
      ],
      "title" : "Documentation Bundle"
    },
    {
      "anchor" : "Bundle-Assets",
      "identifiers" : [
        "doc:\/\/SwiftDocC\/documentation\/SwiftDocC\/DataTraitCollection",
        "doc:\/\/SwiftDocC\/documentation\/SwiftDocC\/DataAsset",
        "doc:\/\/SwiftDocC\/documentation\/SwiftDocC\/BundleData"
      ],
      "title" : "Bundle Assets"
    },
    {
      "anchor" : "Bundle-Metadata",
      "identifiers" : [
        "doc:\/\/SwiftDocC\/documentation\/SwiftDocC\/ExternalMetadata",
        "doc:\/\/SwiftDocC\/documentation\/SwiftDocC\/DefaultAvailability",
        "doc:\/\/SwiftDocC\/documentation\/SwiftDocC\/PlatformVersion"
      ],
      "title" : "Bundle Metadata"
    }
  ],
  "variants" : [
    {
      "paths" : [
        "\/documentation\/swiftdocc\/inputdiscovery"
      ],
      "traits" : [
        {
          "interfaceLanguage" : "swift"
        }
      ]
    }
  ]
, 
"references": {
"doc://SwiftDocC/documentation/SwiftDocC": {
  "abstract" : [
    {
      "text" : "Combine code comments with markup prose to produce structured, semantic documentation.",
      "type" : "text"
    }
  ],
  "identifier" : "doc:\/\/SwiftDocC\/documentation\/SwiftDocC",
  "kind" : "symbol",
  "role" : "collection",
  "title" : "SwiftDocC",
  "type" : "topic",
  "url" : "\/documentation\/swiftdocc"
},
"doc://SwiftDocC/documentation/SwiftDocC/BundleData": {
  "abstract" : [
    {
      "text" : "The data associated with a documentation resource, for a specific trait collection.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "BundleData"
    }
  ],
  "identifier" : "doc:\/\/SwiftDocC\/documentation\/SwiftDocC\/BundleData",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "BundleData"
    }
  ],
  "role" : "symbol",
  "title" : "BundleData",
  "type" : "topic",
  "url" : "\/documentation\/swiftdocc\/bundledata"
},
"doc://SwiftDocC/documentation/SwiftDocC/BundleIdentifier": {
  "abstract" : [
    {
      "text" : "Documentation bundles use a string value as a unique identifier.",
      "type" : "text"
    }
  ],
  "deprecated" : true,
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "typealias"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "BundleIdentifier"
    }
  ],
  "identifier" : "doc:\/\/SwiftDocC\/documentation\/SwiftDocC\/BundleIdentifier",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "BundleIdentifier"
    }
  ],
  "role" : "symbol",
  "title" : "BundleIdentifier",
  "type" : "topic",
  "url" : "\/documentation\/swiftdocc\/bundleidentifier"
},
"doc://SwiftDocC/documentation/SwiftDocC/DataAsset": {
  "abstract" : [
    {
      "text" : "A container for a collection of data that represent multiple ways to describe a single asset.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "DataAsset"
    }
  ],
  "identifier" : "doc:\/\/SwiftDocC\/documentation\/SwiftDocC\/DataAsset",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "DataAsset"
    }
  ],
  "role" : "symbol",
  "title" : "DataAsset",
  "type" : "topic",
  "url" : "\/documentation\/swiftdocc\/dataasset"
},
"doc://SwiftDocC/documentation/SwiftDocC/DataTraitCollection": {
  "abstract" : [
    {
      "text" : "A collection of environment traits for an asset variant.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "DataTraitCollection"
    }
  ],
  "identifier" : "doc:\/\/SwiftDocC\/documentation\/SwiftDocC\/DataTraitCollection",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "DataTraitCollection"
    }
  ],
  "role" : "symbol",
  "title" : "DataTraitCollection",
  "type" : "topic",
  "url" : "\/documentation\/swiftdocc\/datatraitcollection"
},
"doc://SwiftDocC/documentation/SwiftDocC/DefaultAvailability": {
  "abstract" : [
    {
      "text" : "A collection of modules and the default platform availability for symbols in that module.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "DefaultAvailability"
    }
  ],
  "identifier" : "doc:\/\/SwiftDocC\/documentation\/SwiftDocC\/DefaultAvailability",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "DefaultAvailability"
    }
  ],
  "role" : "symbol",
  "title" : "DefaultAvailability",
  "type" : "topic",
  "url" : "\/documentation\/swiftdocc\/defaultavailability"
},
"doc://SwiftDocC/documentation/SwiftDocC/DocumentationBundle": {
  "abstract" : [
    {
      "text" : "A collection of the build inputs for a unit of documentation.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "DocumentationBundle"
    }
  ],
  "identifier" : "doc:\/\/SwiftDocC\/documentation\/SwiftDocC\/DocumentationBundle",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "DocumentationBundle"
    }
  ],
  "role" : "symbol",
  "title" : "DocumentationBundle",
  "type" : "topic",
  "url" : "\/documentation\/swiftdocc\/documentationbundle"
},
"doc://SwiftDocC/documentation/SwiftDocC/DocumentationBundleFileTypes": {
  "abstract" : [
    {
      "text" : "A collection of functions to check if a file is one of the documentation bundle files types.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "enum"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "DocumentationBundleFileTypes"
    }
  ],
  "identifier" : "doc:\/\/SwiftDocC\/documentation\/SwiftDocC\/DocumentationBundleFileTypes",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "DocumentationBundleFileTypes"
    }
  ],
  "role" : "symbol",
  "title" : "DocumentationBundleFileTypes",
  "type" : "topic",
  "url" : "\/documentation\/swiftdocc\/documentationbundlefiletypes"
},
"doc://SwiftDocC/documentation/SwiftDocC/DocumentationContext": {
  "abstract" : [
    {
      "text" : "The documentation context manages the in-memory model for the built documentation.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "class"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "DocumentationContext"
    }
  ],
  "identifier" : "doc:\/\/SwiftDocC\/documentation\/SwiftDocC\/DocumentationContext",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "DocumentationContext"
    }
  ],
  "role" : "symbol",
  "title" : "DocumentationContext",
  "type" : "topic",
  "url" : "\/documentation\/swiftdocc\/documentationcontext"
},
"doc://SwiftDocC/documentation/SwiftDocC/DocumentationContextGroup": {
  "abstract" : [
    {
      "text" : "Build and query the in-memory documentation model.",
      "type" : "text"
    }
  ],
  "identifier" : "doc:\/\/SwiftDocC\/documentation\/SwiftDocC\/DocumentationContextGroup",
  "kind" : "article",
  "role" : "collectionGroup",
  "title" : "Documentation Context",
  "type" : "topic",
  "url" : "\/documentation\/swiftdocc\/documentationcontextgroup"
},
"doc://SwiftDocC/documentation/SwiftDocC/ExternalMetadata": {
  "abstract" : [
    {
      "text" : "External metadata injected into the documentation compiler, for example via command line arguments.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "ExternalMetadata"
    }
  ],
  "identifier" : "doc:\/\/SwiftDocC\/documentation\/SwiftDocC\/ExternalMetadata",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "ExternalMetadata"
    }
  ],
  "role" : "symbol",
  "title" : "ExternalMetadata",
  "type" : "topic",
  "url" : "\/documentation\/swiftdocc\/externalmetadata"
},
"doc://SwiftDocC/documentation/SwiftDocC/PlatformVersion": {
  "abstract" : [
    {
      "text" : "A pair of a version number and beta information for a platform.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "PlatformVersion"
    }
  ],
  "identifier" : "doc:\/\/SwiftDocC\/documentation\/SwiftDocC\/PlatformVersion",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "PlatformVersion"
    }
  ],
  "role" : "symbol",
  "title" : "PlatformVersion",
  "type" : "topic",
  "url" : "\/documentation\/swiftdocc\/platformversion"
}
}
}