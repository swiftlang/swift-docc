{
  "abstract" : [
    {
      "text" : "Given an array of symbols that are overloads for the symbol represented",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "by this link component, returns those that are precisely identified by the component.",
      "type" : "text"
    }
  ],
  "deprecationSummary" : [
    {
      "inlineContent" : [
        {
          "text" : "This deprecated API will be removed after 6.2 is released",
          "type" : "text"
        }
      ],
      "type" : "paragraph"
    }
  ],
  "hierarchy" : {
    "paths" : [
      [
        "doc:\/\/SwiftDocC\/documentation\/SwiftDocC",
        "doc:\/\/SwiftDocC\/documentation\/SwiftDocC\/AbsoluteSymbolLink",
        "doc:\/\/SwiftDocC\/documentation\/SwiftDocC\/AbsoluteSymbolLink\/LinkComponent"
      ]
    ]
  },
  "identifier" : {
    "interfaceLanguage" : "swift",
    "url" : "doc:\/\/SwiftDocC\/documentation\/SwiftDocC\/AbsoluteSymbolLink\/LinkComponent\/disambiguateBetweenOverloadedSymbols(_:)"
  },
  "kind" : "symbol",
  "metadata" : {
    "extendedModule" : "SwiftDocC",
    "externalID" : "s:9SwiftDocC18AbsoluteSymbolLinkV0E9ComponentV36disambiguateBetweenOverloadedSymbolsySayxGAgA0B20CSymbolRepresentableRzlF",
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "func"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "disambiguateBetweenOverloadedSymbols"
      },
      {
        "kind" : "text",
        "text" : "<"
      },
      {
        "kind" : "genericParameter",
        "text" : "SymbolType"
      },
      {
        "kind" : "text",
        "text" : ">(["
      },
      {
        "kind" : "typeIdentifier",
        "text" : "SymbolType"
      },
      {
        "kind" : "text",
        "text" : "]) -> ["
      },
      {
        "kind" : "typeIdentifier",
        "text" : "SymbolType"
      },
      {
        "kind" : "text",
        "text" : "]"
      }
    ],
    "modules" : [
      {
        "name" : "SwiftDocC"
      }
    ],
    "platforms" : [

    ],
    "remoteSource" : {
      "fileName" : "DocCSymbolRepresentable.swift",
      "url" : "https:\/\/github.com\/swiftlang\/swift-docc\/blob\/main\/Sources\/SwiftDocC\/DocumentationService\/Convert\/Symbol%20Link%20Resolution\/DocCSymbolRepresentable.swift#L61"
    },
    "role" : "symbol",
    "roleHeading" : "Instance Method",
    "symbolKind" : "method",
    "title" : "disambiguateBetweenOverloadedSymbols(_:)"
  },
  "primaryContentSections" : [
    {
      "declarations" : [
        {
          "languages" : [
            "swift"
          ],
          "platforms" : [
            "macOS"
          ],
          "tokens" : [
            {
              "kind" : "keyword",
              "text" : "func"
            },
            {
              "kind" : "text",
              "text" : " "
            },
            {
              "kind" : "identifier",
              "text" : "disambiguateBetweenOverloadedSymbols"
            },
            {
              "kind" : "text",
              "text" : "<"
            },
            {
              "kind" : "genericParameter",
              "text" : "SymbolType"
            },
            {
              "kind" : "text",
              "text" : ">("
            },
            {
              "kind" : "externalParam",
              "text" : "_"
            },
            {
              "kind" : "text",
              "text" : " "
            },
            {
              "kind" : "internalParam",
              "text" : "overloadedSymbols"
            },
            {
              "kind" : "text",
              "text" : ": ["
            },
            {
              "kind" : "typeIdentifier",
              "text" : "SymbolType"
            },
            {
              "kind" : "text",
              "text" : "]) -> ["
            },
            {
              "kind" : "typeIdentifier",
              "text" : "SymbolType"
            },
            {
              "kind" : "text",
              "text" : "] "
            },
            {
              "kind" : "keyword",
              "text" : "where"
            },
            {
              "kind" : "text",
              "text" : " "
            },
            {
              "kind" : "typeIdentifier",
              "text" : "SymbolType"
            },
            {
              "kind" : "text",
              "text" : " : "
            },
            {
              "identifier" : "doc:\/\/SwiftDocC\/documentation\/SwiftDocC\/DocCSymbolRepresentable",
              "kind" : "typeIdentifier",
              "preciseIdentifier" : "s:9SwiftDocC0B20CSymbolRepresentableP",
              "text" : "DocCSymbolRepresentable"
            }
          ]
        }
      ],
      "kind" : "declarations"
    },
    {
      "content" : [
        {
          "anchor" : "discussion",
          "level" : 2,
          "text" : "Discussion",
          "type" : "heading"
        },
        {
          "inlineContent" : [
            {
              "text" : "If the link is not specific enough to disambiguate between the given symbols,",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "this function will return an empty array.",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        }
      ],
      "kind" : "content"
    }
  ],
  "schemaVersion" : {
    "major" : 0,
    "minor" : 3,
    "patch" : 0
  },
  "sections" : [

  ],
  "variants" : [
    {
      "paths" : [
        "\/documentation\/swiftdocc\/absolutesymbollink\/linkcomponent\/disambiguatebetweenoverloadedsymbols(_:)"
      ],
      "traits" : [
        {
          "interfaceLanguage" : "swift"
        }
      ]
    }
  ]
, 
"references": {
"doc://SwiftDocC/documentation/SwiftDocC": {
  "abstract" : [
    {
      "text" : "Combine code comments with markup prose to produce structured, semantic documentation.",
      "type" : "text"
    }
  ],
  "identifier" : "doc:\/\/SwiftDocC\/documentation\/SwiftDocC",
  "kind" : "symbol",
  "role" : "collection",
  "title" : "SwiftDocC",
  "type" : "topic",
  "url" : "\/documentation\/swiftdocc"
},
"doc://SwiftDocC/documentation/SwiftDocC/AbsoluteSymbolLink": {
  "abstract" : [
    {
      "text" : "An absolute link to a symbol.",
      "type" : "text"
    }
  ],
  "deprecated" : true,
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "AbsoluteSymbolLink"
    }
  ],
  "identifier" : "doc:\/\/SwiftDocC\/documentation\/SwiftDocC\/AbsoluteSymbolLink",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "AbsoluteSymbolLink"
    }
  ],
  "role" : "symbol",
  "title" : "AbsoluteSymbolLink",
  "type" : "topic",
  "url" : "\/documentation\/swiftdocc\/absolutesymbollink"
},
"doc://SwiftDocC/documentation/SwiftDocC/AbsoluteSymbolLink/LinkComponent": {
  "abstract" : [
    {
      "text" : "A component of a symbol link.",
      "type" : "text"
    }
  ],
  "deprecated" : true,
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "LinkComponent"
    }
  ],
  "identifier" : "doc:\/\/SwiftDocC\/documentation\/SwiftDocC\/AbsoluteSymbolLink\/LinkComponent",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "LinkComponent"
    }
  ],
  "role" : "symbol",
  "title" : "AbsoluteSymbolLink.LinkComponent",
  "type" : "topic",
  "url" : "\/documentation\/swiftdocc\/absolutesymbollink\/linkcomponent"
},
"doc://SwiftDocC/documentation/SwiftDocC/AbsoluteSymbolLink/LinkComponent/disambiguateBetweenOverloadedSymbols(_:)": {
  "abstract" : [
    {
      "text" : "Given an array of symbols that are overloads for the symbol represented",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "by this link component, returns those that are precisely identified by the component.",
      "type" : "text"
    }
  ],
  "deprecated" : true,
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "disambiguateBetweenOverloadedSymbols"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "SymbolType"
    },
    {
      "kind" : "text",
      "text" : ">(["
    },
    {
      "kind" : "typeIdentifier",
      "text" : "SymbolType"
    },
    {
      "kind" : "text",
      "text" : "]) -> ["
    },
    {
      "kind" : "typeIdentifier",
      "text" : "SymbolType"
    },
    {
      "kind" : "text",
      "text" : "]"
    }
  ],
  "identifier" : "doc:\/\/SwiftDocC\/documentation\/SwiftDocC\/AbsoluteSymbolLink\/LinkComponent\/disambiguateBetweenOverloadedSymbols(_:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "disambiguateBetweenOverloadedSymbols(_:)",
  "type" : "topic",
  "url" : "\/documentation\/swiftdocc\/absolutesymbollink\/linkcomponent\/disambiguatebetweenoverloadedsymbols(_:)"
},
"doc://SwiftDocC/documentation/SwiftDocC/DocCSymbolRepresentable": {
  "abstract" : [
    {
      "text" : "A type that can be converted to a DocC symbol.",
      "type" : "text"
    }
  ],
  "deprecated" : true,
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "protocol"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "DocCSymbolRepresentable"
    }
  ],
  "identifier" : "doc:\/\/SwiftDocC\/documentation\/SwiftDocC\/DocCSymbolRepresentable",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "DocCSymbolRepresentable"
    }
  ],
  "role" : "symbol",
  "title" : "DocCSymbolRepresentable",
  "type" : "topic",
  "url" : "\/documentation\/swiftdocc\/doccsymbolrepresentable"
}
}
}